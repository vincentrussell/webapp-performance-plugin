<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>perf-war</packaging>

    <groupId>@project.groupId@</groupId>
    <artifactId>@project.artifactId@-test</artifactId>
    <version>@project.version@</version>

    <description>A simple IT verifying the basic use case.</description>


    <properties>
        <jdkVersion>1.7</jdkVersion>
        <junit.version>4.12</junit.version>
        <ghostdriver.version>1.1.0</ghostdriver.version>
        <jetty.version>9.1.6.v20160112</jetty.version>
        <failsafe.version>2.19.1</failsafe.version>
        <phantomjs.plugin.version>0.7</phantomjs.plugin.version>
        <phantomjs.version>2.1.1</phantomjs.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.detro.ghostdriver</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>${ghostdriver.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>@project.groupId@</groupId>
                    <artifactId>@project.artifactId@</artifactId>
                    <version>@project.version@</version>
                    <extensions>true</extensions>
                    <configuration>
                        <bundles>
                            <jsBundle>
                                <name>bundle1</name>
                                <javascriptFiles>
                                    <javascriptFile>${project.basedir}/src/main/webapp/js/float.js</javascriptFile>
                                    <javascriptFile>${project.basedir}/src/main/webapp/js/string_combo.js</javascriptFile>
                                </javascriptFiles>
                            </jsBundle>
                            <cssBundle>
                                <name>bundle2</name>
                                <cssFiles>
                                    <cssFile>${project.basedir}/src/main/webapp/css/comment.css</cssFile>
                                    <cssFile>${project.basedir}/src/main/webapp/css/zeros.css</cssFile>
                                </cssFiles>
                            </cssBundle>
                        </bundles>
                        <cacheFilterConfig>
                            <shouldProcessImages>false</shouldProcessImages>
                            <shouldProcessCss>true</shouldProcessCss>
                            <shouldProcessJs>true</shouldProcessJs>
                            <exclusions>
                                <exclusion>/exclusion1</exclusion>
                                <exclusion>/exclusion2</exclusion>
                            </exclusions>
                            <extensions>
                                <extension>exe</extension>
                                <extension>bat</extension>
                            </extensions>
                        </cacheFilterConfig>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>


        <plugins>
            <plugin>
                <groupId>@project.groupId@</groupId>
                <artifactId>@project.artifactId@</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5</version>
                <configuration>
                    <source>${jdkVersion}</source>
                    <target>${jdkVersion}</target>
                </configuration>
            </plugin>
                <!-- Installs PhantomJS so it doesn't have to be pre-installed -->
            <plugin>
                <groupId>com.github.klieber</groupId>
                <artifactId>phantomjs-maven-plugin</artifactId>
                <version>${phantomjs.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <version>${phantomjs.version}</version>
                </configuration>
            </plugin>
            <!-- Get two free ports for our test server to use -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <portNames>
                        <portName>jetty.port</portName>
                        <portName>jetty.port.stop</portName>
                    </portNames>
                </configuration>
                <executions>
                    <execution>
                        <id>reserve-port</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Use failsafe to run our integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <project.version>${project.version}</project.version>
                        <phantomjs.binary>${phantomjs.binary}</phantomjs.binary>
                        <jetty.port>${jetty.port}</jetty.port>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Use a Jetty test server to serve our test content -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-servlet</artifactId>
                        <version>${jetty.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <jvmArgs>-Djetty.http.port=${jetty.port}</jvmArgs>
                    <stopKey>ANY_KEY_HERE_IS_FINE</stopKey>
                    <stopPort>${jetty.port.stop}</stopPort>
                    <httpConnector>
                        <port>${jetty.port}</port>
                    </httpConnector>
                    <webApp>
                        <contextPath>/test</contextPath>
                    </webApp>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run-war</goal>
                        </goals>
                        <configuration>
                            <daemon>true</daemon>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>